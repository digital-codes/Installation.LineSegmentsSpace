//@author: elliotwoods
//@help: select a volume (still doing this old trick?)
//@tags: texture
//@credits: 

Texture2D<float3> texture2d : PREVIOUS;
float Radius = 1.0f;
float Thickness = 0.1f;
float Phase = 0.0f;
float Height = 0.3f;

float4x4 TransformInverse;

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PSSphere(psInput input) : SV_Target
{
	float4 World;
	World.xyz = texture2d.Sample(linearSampler,input.uv);
	World.w = 1.0f;
	World = mul(World, TransformInverse);
	
	return sin((length(World.xyz) - Phase) / Radius) / 2.0f + 0.5f;
}

float4 PSTraverse(psInput input) : SV_Target
{
	float4 World;
	World.xyz = texture2d.Sample(linearSampler,input.uv);
	World.w = 1.0f;
	World = mul(World, TransformInverse);
	
	float height = Height * sin((length(World.xz) - Phase) / Radius);
	return abs(height - World.y) < Thickness;
}

technique10 Sphere
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PSSphere()));
	}
}

technique10 Traverse
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PSTraverse()));
	}
}


